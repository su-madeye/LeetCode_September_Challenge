/*
https://leetcode.com/explore/challenge/card/september-leetcoding-challenge/555/week-2-september-8th-september-14th/3459/

c++ solution
Author: Prakhar Tibrewal

*/

class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        // if(intervals.size() == 0)   return newInterval;
        int pos = max((int)(0),(int)(intervals.size()));
        for(int i =0; i < intervals.size(); i++){
            if(intervals[i][0] > newInterval[0]){
                pos = i;
                break;
            }
        }
        intervals.insert(intervals.begin()+pos, newInterval);
        for(int i = 0; i < intervals.size(); i++){
            cout << intervals[i][0] << " " << intervals[i][1] << '\n';
        }
        vector<vector<int>> v;
        v.push_back(intervals[0]);
        int j = 0;
        for(int i = 1; i < intervals.size(); i++){
            if(intervals[i][0] <= v[j][1]){
                v[j][1] = max(intervals[i][1],v[j][1]);
                // v[j][0] = min(intervals[i][0],v[j][0]);
                
            } else{
                v.push_back(intervals[i]);
                j++;
            }
        }
        return v;
    }
};